//
//  SKNode+worldGenerator.m
//  SpriteWalkthrough
//
//  Created by Abhishek Shinde on 29/01/15.
//  Copyright (c) 2015 com.claricetechnologies. All rights reserved.
//

#import "worldGenerator.h"

@interface worldGenerator ()
@property double currentGroundX;
@property double currentObstracleX;
@property SKNode *world;
@end

@implementation worldGenerator

static const uint32_t obstaracleCateogry = 0x1 << 1;
static const uint32_t groundCategory = 0x1 << 2;

+(id) generateWorld:(SKNode *) world //setting ground and obstraclex
{
    worldGenerator *gen=[worldGenerator node];
    gen.currentGroundX=0;
    gen.currentObstracleX=400;
    gen.world=world;
    return gen;
}


-(void)populate //draw things in the world
{
    for(int i=0;i<3;i++)
    {
        [self generate];
    }
}

-(void)generate
{
    SKSpriteNode *node=[SKSpriteNode spriteNodeWithImageNamed:@"ground.png"];
    node.position=CGPointMake(self.currentGroundX,-self.scene.frame.size.height/2+node.frame.size.height/2);
    
    node.physicsBody=[SKPhysicsBody bodyWithRectangleOfSize:node.size];
    node.physicsBody.dynamic=NO;

    node.physicsBody.categoryBitMask=groundCategory;
  //  static const uint32_t obstaracleCateogry = 0x1 << 1;
    node.name=@"ground";
    [self.world addChild:node];
    
    self.currentGroundX+=node.frame.size.width;
    
    
    SKSpriteNode *obstracle=[SKSpriteNode spriteNodeWithColor:[self getRandomColor] size:CGSizeMake(30,40)];
    obstracle.position=CGPointMake(self.currentObstracleX,node.position.y+node.frame.size.height/2+obstracle.frame.size.height/2);
    obstracle.name=@"obstracle";
    obstracle.physicsBody=[SKPhysicsBody bodyWithRectangleOfSize:obstracle.size];
    obstracle.physicsBody.dynamic=NO;
    obstracle.physicsBody.categoryBitMask=obstaracleCateogry;
    
    
    [self.world addChild:obstracle];
    //self.currentGroundX+=250;
    self.currentObstracleX+=300;
}


-(UIColor *)getRandomColor
{
    int rand;
    UIColor *color;
    rand=arc4random()%6;
    switch (rand) {
        case 0:
            color=[UIColor redColor];
            break;
        case 1:
            color=[UIColor lightGrayColor];
            break;
        case 2:
            color=[UIColor magentaColor];
            break;
        case 3:
            color=[UIColor purpleColor];
            break;
        case 4:
            color=[UIColor darkGrayColor];
            break;
        case 5:
            color=[UIColor blueColor];
            break;
        default:
            break;
    }
    return color;
}
@end
